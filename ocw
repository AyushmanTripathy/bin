#!/bin/sh

dir="$XDG_DATA_HOME/ocw"

nextLecture(){
  course=$(find $dir -maxdepth 1 -type f | grep -v -e "Readme.md" | sed -e "s/^.*\///" | sed -e "s/\.txt//g" | dmenu -p "Choose Course: " -l 10)
  lecture=$(cat "$dir/$course.txt" | grep -F "[ ]" | head -n 1 | cut -b 5-)

  if [ -z $lecture ]
  then
    notify-send "Course Complete!"
  else
    $BROWSER "https://youtu.be/$lecture" 
  fi
}

markLecture(){
  course=$(find $dir -maxdepth 1 -type f | grep -v -e "Readme.md" | sed -e "s/^.*\///" | sed -e "s/\.txt//g" | dmenu -p "Choose Course: " -l 10)
  file="$dir/$course.txt"
  tmp_file="/tmp/ocw.txt"

  cat $file | grep -F "[x]" >> $tmp_file
  cat $file | grep -F "[ ]" | head -n 1 | sed -e "s/\[ \]/\[x\]/" >> $tmp_file
  cat $file | grep -F "[ ]" | sed -n "1!p" >> $tmp_file
  echo "" >> $tmp_file
  cat $file | grep -e "^[^\[]" >> $tmp_file
  cp $tmp_file $file
  rm $tmp_file
}

openCode() {
  tmp_dir="$HOME/tmp/ocw-code"
  rm -r $tmp_dir
  mkdir -p $tmp_dir
  cd $tmp_dir
  unzip $(node $dir/frontend/index.js)
}

openPDF() {
  loc=$(find $dir -type d -maxdepth 1 ! -path "*/frontend*" ! -path "*.git*"| dmenu -p "Choose Course: " -l 10)
  $BROWSER $(node $dir/frontend/search.js $loc)
}

while getopts "n m o c" flag
do
    case "${flag}" in
        n) nextLecture;;
        m) markLecture;;
        o) openPDF;;
        c) openCode;;
    esac
done
